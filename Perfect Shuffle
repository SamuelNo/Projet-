import random
class Pile:
    def __init__(self):
        self.data = []

    def empiler(self, element):
        self.data.append(element)

    def hauteur(self):
        return len(self.data)

    def est_vide(self):
        return self.hauteur() == 0

    def depiler(self):
        return self.data.pop()

    def sommet(self):
        return self.data.pop[-1]

    def diviser(self):
        P = Pile()
        Q = Pile()
        while not self.est_vide():
            carte1= self.depiler()
            Q.empiler(carte1)
            carte2 = self.depiler()
            P.empiler(carte2)
        return P.data,Q.data


def perfect_shuffle(self,paquet):
        Fusion = Pile()
        while not self.est_vide() and not paquet.est_vide():
            for i in range(min(random.randint(1,2),self.hauteur())):
                carte1 = self.depiler()
                Fusion.empiler(carte1)
            for i in range(min(random.randint(1,2),paquet.hauteur())):
                carte2 = paquet.depiler()
                Fusion.empiler(carte2)

        while not self.est_vide():
            carte_last= self.depiler()
            Fusion.empiler(carte_last)

        while not paquet.est_vide():
            carte_last2 = paquet.depiler()
            Fusion.empiler(carte_last2)

        return Fusion.data




piles2 = Pile()
piles1 = Pile()
piles3 = Pile()
for i in range (10):
    Pile.empiler(piles3,i)
for i in range(0,5):
    Pile.empiler(piles1,i)
for i in range(5,10):
    Pile.empiler(piles2,i)
print(piles3.data)
print(piles3.diviser())
print(perfect_shuffle(piles1,piles2))
